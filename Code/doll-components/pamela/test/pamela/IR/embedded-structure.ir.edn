{choose-sequence-htn
 {:args [plant],
  :methods
  {main
   [{:args [],
     :betweens [],
     :body
     [{:type :choose,
       :body
       [{:type :choice,
         :body
         [{:type :sequence,
           :body
           [{:type :method-fn,
             :method-ref
             {:type :pclass-arg-ref, :names [plant bounded]},
             :args []}
            {:type :method-fn,
             :method-ref
             {:type :pclass-arg-ref, :names [plant unbounded]},
             :args []}]}]}
        {:type :choice,
         :body
         [{:type :sequence,
           :body
           [{:type :method-fn,
             :method-ref
             {:type :pclass-arg-ref, :names [plant bounded]},
             :args []}
            {:type :method-fn,
             :method-ref
             {:type :pclass-arg-ref, :names [plant unbounded]},
             :args []}]}]}]}],
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Main",
     :post true,
     :pre true,
     :primitive false,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass},
 double-parallel-htn
 {:args [plant],
  :methods
  {main
   [{:args [],
     :betweens [],
     :body
     [{:type :parallel,
       :body
       [{:type :parallel,
         :body
         [{:type :method-fn,
           :method-ref {:type :pclass-arg-ref, :names [plant bounded]},
           :args []}
          {:type :method-fn,
           :method-ref
           {:type :pclass-arg-ref, :names [plant unbounded]},
           :args []}]}
        {:type :parallel,
         :body
         [{:type :method-fn,
           :method-ref {:type :pclass-arg-ref, :names [plant bounded]},
           :args []}
          {:type :method-fn,
           :method-ref
           {:type :pclass-arg-ref, :names [plant unbounded]},
           :args []}]}]}],
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Main",
     :post true,
     :pre true,
     :primitive false,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass},
 parallel-sequence2-htn
 {:args [plant],
  :methods
  {main
   [{:args [],
     :betweens [],
     :body
     [{:type :parallel,
       :body
       [{:type :sequence,
         :body
         [{:type :method-fn,
           :method-ref {:type :pclass-arg-ref, :names [plant bounded]},
           :args []}
          {:type :method-fn,
           :method-ref
           {:type :pclass-arg-ref, :names [plant unbounded]},
           :args []}]}
        {:type :sequence,
         :body
         [{:type :method-fn,
           :method-ref {:type :pclass-arg-ref, :names [plant bounded]},
           :args []}
          {:type :method-fn,
           :method-ref
           {:type :pclass-arg-ref, :names [plant unbounded]},
           :args []}]}]}],
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Main",
     :post true,
     :pre true,
     :primitive false,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass},
 plant
 {:args [],
  :meta {:doc "The Plant API"},
  :methods
  {bounded
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Bounded",
     :doc "Bounded",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [1 5]}]}],
   unbounded
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Unbounded",
     :doc "Unbounded",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass},
 sequence-choose-htn
 {:args [plant],
  :methods
  {main
   [{:args [],
     :betweens [],
     :body
     [{:type :sequence,
       :body
       [{:type :choose,
         :body
         [{:type :choice,
           :body
           [{:type :method-fn,
             :method-ref
             {:type :pclass-arg-ref, :names [plant bounded]},
             :args []}]}
          {:type :choice,
           :body
           [{:type :method-fn,
             :method-ref
             {:type :pclass-arg-ref, :names [plant unbounded]},
             :args []}]}]}
        {:type :choose,
         :body
         [{:type :choice,
           :body
           [{:type :method-fn,
             :method-ref
             {:type :pclass-arg-ref, :names [plant bounded]},
             :args []}]}
          {:type :choice,
           :body
           [{:type :method-fn,
             :method-ref
             {:type :pclass-arg-ref, :names [plant unbounded]},
             :args []}]}]}]}],
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Main",
     :post true,
     :pre true,
     :primitive false,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass},
 sequence-parallel1-htn
 {:args [plant],
  :methods
  {main
   [{:args [],
     :betweens [],
     :body
     [{:type :sequence,
       :body
       [{:type :method-fn,
         :method-ref {:type :pclass-arg-ref, :names [plant bounded]},
         :args []}
        {:type :parallel,
         :body
         [{:type :method-fn,
           :method-ref {:type :pclass-arg-ref, :names [plant bounded]},
           :args []}
          {:type :method-fn,
           :method-ref
           {:type :pclass-arg-ref, :names [plant unbounded]},
           :args []}]}]}],
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Main",
     :post true,
     :pre true,
     :primitive false,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass},
 sequence-parallel2-htn
 {:args [plant],
  :methods
  {main
   [{:args [],
     :betweens [],
     :body
     [{:type :sequence,
       :body
       [{:type :parallel,
         :body
         [{:type :method-fn,
           :method-ref {:type :pclass-arg-ref, :names [plant bounded]},
           :args []}
          {:type :method-fn,
           :method-ref
           {:type :pclass-arg-ref, :names [plant unbounded]},
           :args []}]}
        {:type :parallel,
         :body
         [{:type :method-fn,
           :method-ref {:type :pclass-arg-ref, :names [plant bounded]},
           :args []}
          {:type :method-fn,
           :method-ref
           {:type :pclass-arg-ref, :names [plant unbounded]},
           :args []}]}]}],
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Main",
     :post true,
     :pre true,
     :primitive false,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass},
 single-parallel-htn
 {:args [plant],
  :methods
  {main
   [{:args [],
     :betweens [],
     :body
     [{:type :parallel,
       :body
       [{:type :method-fn,
         :method-ref {:type :pclass-arg-ref, :names [plant bounded]},
         :args []}
        {:type :method-fn,
         :method-ref {:type :pclass-arg-ref, :names [plant unbounded]},
         :args []}]}],
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Main",
     :post true,
     :pre true,
     :primitive false,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass}}
