{issue-122
 {:args [],
  :fields {value {:access :private, :initial 122, :observable false}},
  :methods
  {main
   [{:args [],
     :betweens [],
     :body
     [{:type :parallel,
       :body
       [{:type :ask,
         :condition
         {:type :equal,
          :args [{:type :field-ref, :names [value]} 100]},
         :body nil,
         :temporal-constraints [{:type :bounds, :value [0 1]}]}
        {:type :assert,
         :condition
         {:type :equal,
          :args [{:type :field-ref, :names [value]} 200]},
         :body nil,
         :temporal-constraints [{:type :bounds, :value [2 3]}]}
        {:type :maintain,
         :condition
         {:type :equal,
          :args [{:type :field-ref, :names [value]} 300]},
         :body [{:type :delay, :body nil}],
         :temporal-constraints [{:type :bounds, :value [4 5]}]}
        {:type :tell,
         :condition
         {:type :equal,
          :args [{:type :field-ref, :names [value]} 400]}}
        {:type :unless,
         :condition
         {:type :equal,
          :args [{:type :field-ref, :names [value]} 500]},
         :body [{:type :delay, :body nil}],
         :temporal-constraints [{:type :bounds, :value [6 7]}]}
        {:type :when,
         :condition
         {:type :equal,
          :args [{:type :field-ref, :names [value]} 600]},
         :body [{:type :delay, :body nil}],
         :temporal-constraints [{:type :bounds, :value [8 9]}]}
        {:type :whenever,
         :condition
         {:type :equal,
          :args [{:type :field-ref, :names [value]} 700]},
         :body [{:type :delay, :body nil}],
         :temporal-constraints [{:type :bounds, :value [10 11]}]}]}],
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Main",
     :post true,
     :pre true,
     :primitive false,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass}}
