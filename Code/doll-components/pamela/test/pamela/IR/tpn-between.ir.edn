{plant
 {:args [],
  :meta {:doc "The Plant API", :version "0.2.0"},
  :methods
  {move-high-res-images
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Move High Res Images",
     :doc "Move High Res Image",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 4]}]}],
   move-medium-res-images
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Move Medium Res Images",
     :doc "Move Medium Res Image",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 4]}]}],
   picture-analysis-type-1
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Picture Analysis Type 1",
     :doc "Picture Analysis Type-1",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 6]}]}],
   picture-analysis-type-2-fast
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Picture Analysis Type 2 Fast",
     :doc "Picture Analysis Type-2: Fast",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 8]}]}],
   picture-analysis-type-2-slow
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Picture Analysis Type 2 Slow",
     :doc "Picture Analysis Type-2: Slow",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 9]}]}],
   picture-analysis-type-3
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Picture Analysis Type 3",
     :doc "Picture Analysis Type-3",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 7]}]}],
   picture-distribution
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Picture Distribution",
     :doc "Picture Distribution",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 5]}]}],
   take-high-res-images
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Take High Res Images",
     :doc "Take High Res Image",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 3]}]}],
   take-medium-res-images
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Take Medium Res Images",
     :doc "Take Medium Res Image",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 3]}]}],
   take-move-low-res-images
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Take Move Low Res Images",
     :doc "Take and Move Low Res Image",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 3]}]}],
   track-elephant
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Track Elephant",
     :doc "Track Elephant",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [150 180]}]}],
   watch-left-hemisphere
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Watch Left Hemisphere",
     :doc "Watch Left Hemisphere",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}],
   watch-right-hemisphere
   [{:args [],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Watch Right Hemisphere",
     :doc "Watch Right Hemisphere",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [10 20]}]}]},
  :type :pclass},
 tpn
 {:args [plant],
  :meta {:doc "TPN Demo", :version "0.2.0"},
  :methods
  {elephant
   [{:args [],
     :betweens
     [{:type :between,
       :from :acquire,
       :to :analyze,
       :temporal-constraints [{:type :bounds, :value [5 20]}]}
      {:type :between-starts,
       :from :watch-right,
       :to :phase-3,
       :temporal-constraints [{:type :bounds, :value [50 :infinity]}]}
      {:type :between-ends,
       :from :phase-3,
       :to :watch-right,
       :temporal-constraints [{:type :bounds, :value [0 5]}]}
      {:type :between-ends,
       :from :process,
       :to :watch-right,
       :temporal-constraints [{:type :bounds, :value [0 3]}]}],
     :body
     [{:type :parallel,
       :body
       [{:type :method-fn,
         :method-ref
         {:type :pclass-arg-ref, :names [plant track-elephant]},
         :args [],
         :temporal-constraints [{:type :bounds, :value [160 170]}]}
        {:type :parallel,
         :body
         [{:type :method-fn,
           :method-ref
           {:type :pclass-arg-ref,
            :names [plant watch-right-hemisphere]},
           :args [],
           :label :watch-right}
          {:type :method-fn,
           :method-ref
           {:type :pclass-arg-ref,
            :names [plant watch-left-hemisphere]},
           :args []}],
         :temporal-constraints [{:type :bounds, :value [20 25]}]}
        {:type :sequence,
         :body
         [{:type :choose,
           :body
           [{:type :choice,
             :body
             [{:type :sequence,
               :body
               [{:type :method-fn,
                 :method-ref
                 {:type :pclass-arg-ref,
                  :names [plant take-high-res-images]},
                 :args [],
                 :temporal-constraints [{:type :bounds, :value [0 3]}]}
                {:type :method-fn,
                 :method-ref
                 {:type :pclass-arg-ref,
                  :names [plant move-high-res-images]},
                 :args [],
                 :temporal-constraints
                 [{:type :bounds, :value [0 4]}]}]}]}
            {:type :choice,
             :body
             [{:type :method-fn,
               :method-ref
               {:type :pclass-arg-ref,
                :names [plant take-move-low-res-images]},
               :args [],
               :temporal-constraints [{:type :bounds, :value [0 3]}]}]}
            {:type :choice,
             :body
             [{:type :sequence,
               :body
               [{:type :method-fn,
                 :method-ref
                 {:type :pclass-arg-ref,
                  :names [plant take-medium-res-images]},
                 :args [],
                 :temporal-constraints [{:type :bounds, :value [0 3]}]}
                {:type :method-fn,
                 :method-ref
                 {:type :pclass-arg-ref,
                  :names [plant move-medium-res-images]},
                 :args [],
                 :temporal-constraints
                 [{:type :bounds, :value [0 4]}]}]}],
             :temporal-constraints [{:type :bounds, :value [78 90]}]}],
           :label :acquire}
          {:type :parallel,
           :body
           [{:type :method-fn,
             :method-ref
             {:type :pclass-arg-ref,
              :names [plant picture-analysis-type-1]},
             :args [],
             :temporal-constraints [{:type :bounds, :value [0 6]}]}
            {:type :choose,
             :body
             [{:type :choice,
               :body
               [{:type :method-fn,
                 :method-ref
                 {:type :pclass-arg-ref,
                  :names [plant picture-analysis-type-2-slow]},
                 :args []}],
               :label :slow-path}
              {:type :choice,
               :body
               [{:type :method-fn,
                 :method-ref
                 {:type :pclass-arg-ref,
                  :names [plant picture-analysis-type-2-fast]},
                 :args [],
                 :temporal-constraints
                 [{:type :bounds, :value [0 10]}]}]}],
             :temporal-constraints [{:type :bounds, :value [0 15]}]}
            {:type :method-fn,
             :method-ref
             {:type :pclass-arg-ref,
              :names [plant picture-analysis-type-3]},
             :args [],
             :label :phase-3,
             :temporal-constraints [{:type :bounds, :value [0 7]}]}],
           :label :analyze}
          {:type :method-fn,
           :method-ref
           {:type :pclass-arg-ref,
            :names [plant picture-distribution]},
           :args [],
           :temporal-constraints [{:type :bounds, :value [0 5]}]}],
         :label :process,
         :temporal-constraints [{:type :bounds, :value [123 456]}]}]}],
     :controllable false,
     :cost 0,
     :display-args [],
     :display-name "Elephant",
     :doc "the tpn",
     :post true,
     :pre true,
     :primitive false,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :type :pclass}}
