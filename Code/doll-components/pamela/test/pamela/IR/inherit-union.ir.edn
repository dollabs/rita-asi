{a
 {:args [],
  :fields
  {fa {:access :private, :initial "fa", :observable false},
   x {:access :private, :initial 1, :observable false}},
  :methods
  {ma
   [{:args [arg1 arg2],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [arg1 arg2],
     :display-name "Ma",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :modes
  {:moa1 {:args [{:type :field-ref, :names [fa]} "fa"], :type :equal},
   :moa2 {:args [{:type :field-ref, :names [fa]} false], :type :equal},
   :x {:args [{:type :field-ref, :names [x]} 1], :type :equal},
   :y {:args [{:type :field-ref, :names [x]} 2], :type :equal}},
  :transitions
  {:moa1:moa2
   {:doc "transition :moa1 -> :moa2",
    :post
    {:mode :moa2,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :pre
    {:mode :moa1,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref}},
   :moa2:moa1
   {:doc "transition :moa2 -> :moa1",
    :post
    {:mode :moa1,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :pre
    {:mode :moa2,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref}},
   :x:y
   {:doc "Same signature, different bounds, class a",
    :post
    {:mode :y,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :pre
    {:mode :x,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :probability 0.1,
    :temporal-constraints [{:type :bounds, :value [3 6]}]}},
  :type :pclass},
 b
 {:args [],
  :fields
  {fb {:access :private, :initial "fb", :observable false},
   x {:access :private, :initial 2, :observable false}},
  :methods
  {mb
   [{:args [arg1 arg2],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [arg1 arg2],
     :display-name "Mb",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :modes
  {:mob1 {:args [{:type :field-ref, :names [fb]} "fb"], :type :equal},
   :mob2 {:args [{:type :field-ref, :names [fb]} true], :type :equal},
   :x {:args [{:type :field-ref, :names [x]} 2], :type :equal},
   :y {:args [{:type :field-ref, :names [x]} 1], :type :equal}},
  :transitions
  {:mob1:mob2
   {:doc "transition :mob1 -> :mob2",
    :post
    {:mode :mob2,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :pre
    {:mode :mob1,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref}},
   :mob2:mob1
   {:doc "transition :mob2 -> :mob1",
    :post
    {:mode :mob1,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :pre
    {:mode :mob2,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref}},
   :x:y
   {:doc "Same signature, different bounds",
    :post
    {:mode :y,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :pre
    {:mode :x,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :probability 0.2,
    :temporal-constraints [{:type :bounds, :value [2 8]}]}},
  :type :pclass},
 c
 {:args [],
  :fields
  {fa {:access :private, :initial "fa", :observable false},
   fb {:access :private, :initial "fb", :observable false},
   x {:access :private, :initial 1, :observable false}},
  :inherit [a b],
  :methods
  {ma
   [{:args [arg1 arg2],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [arg1 arg2],
     :display-name "Ma",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}],
   mb
   [{:args [arg1 arg2],
     :betweens [],
     :body nil,
     :controllable false,
     :cost 0,
     :display-args [arg1 arg2],
     :display-name "Mb",
     :post true,
     :pre true,
     :primitive true,
     :probability 1.0,
     :reward 0,
     :temporal-constraints [{:type :bounds, :value [0 :infinity]}]}]},
  :modes
  {:moa1 {:args [{:type :field-ref, :names [fa]} "fa"], :type :equal},
   :moa2 {:args [{:type :field-ref, :names [fa]} false], :type :equal},
   :mob1 {:args [{:type :field-ref, :names [fb]} "fb"], :type :equal},
   :mob2 {:args [{:type :field-ref, :names [fb]} true], :type :equal},
   :x {:args [{:type :field-ref, :names [x]} 1], :type :equal},
   :y {:args [{:type :field-ref, :names [x]} 2], :type :equal}},
  :transitions
  {:moa1:moa2
   {:doc "transition :moa1 -> :moa2",
    :post
    {:mode :moa2,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :pre
    {:mode :moa1,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref}},
   :moa2:moa1
   {:doc "transition :moa2 -> :moa1",
    :post
    {:mode :moa1,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :pre
    {:mode :moa2,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref}},
   :mob1:mob2
   {:doc "transition :mob1 -> :mob2",
    :post
    {:mode :mob2,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :pre
    {:mode :mob1,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref}},
   :mob2:mob1
   {:doc "transition :mob2 -> :mob1",
    :post
    {:mode :mob1,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :pre
    {:mode :mob2,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref}},
   :x:y
   {:doc "Same signature, different bounds, class a",
    :post
    {:mode :y,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :pre
    {:mode :x,
     :mode-ref {:names [this], :type :symbol-ref},
     :type :mode-ref},
    :probability 0.1,
    :temporal-constraints [{:type :bounds, :value [2 8]}]}},
  :type :pclass}}
