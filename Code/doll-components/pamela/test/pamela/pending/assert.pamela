;; Copyright Â© 2017 Dynamic Object Language Labs Inc.
;;
;; This software is licensed under the terms of the
;; Apache License, Version 2.0 which can be found in
;; the file LICENSE at the root of this distribution.

;;; Acknowledgement and Disclaimer:
;;; This material is based upon work supported by the Army Contracting
;;; and DARPA under contract No. W911NF-15-C-0005.
;;; Any opinions, findings and conclusions or recommendations expressed
;;; in this material are those of the author(s) and do necessarily reflect the
;;; views of the Army Contracting Command and DARPA.

;; Suggested use:
;; pamela -v -i assert.pamela -o assert -t "(main.main)" htn


(defpclass main []
  :methods [(defpmethod main []
              (sequence
               (set-things-up)
               (assert (= door "open"))
               (walk-through-door)
               ))

            (defpmethod set-things-up []
              )

            (defpmethod walk-through-door
              {:pre (= door "open")} []
              )

            ;;This non-primitive method might be a better option to satisfy the assert
            (defpmethod satisfy-postcondition []
              {:post (= door "open")}
              (open-the-door))

            (defpmethod open-the-door
              {:post (= door "open")} []
              )
            ])
