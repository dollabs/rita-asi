{:hedge-44 {:end-node :hem-34, :type :edge, :uid :hedge-44},
 :hedge-46 {:end-node :hem-37, :type :edge, :uid :hedge-46},
 :hedge-48 {:end-node :hpt-36, :type :edge, :uid :hedge-48},
 :hedge-49 {:end-node :hem-41, :type :edge, :uid :hedge-49},
 :hedge-51 {:end-node :hpt-40, :type :edge, :uid :hedge-51},
 :hem-34
 {:args [],
  :display-args [],
  :display-name "Main",
  :edges [:hedge-46 :hedge-49],
  :incidence-set #{:hedge-44},
  :network :net-45,
  :type :htn-expanded-method,
  :uid :hem-34},
 :hem-37
 {:args [],
  :display-args [],
  :display-name "Ask Branch",
  :edges [],
  :incidence-set #{},
  :network :net-47,
  :type :htn-expanded-method,
  :uid :hem-37},
 :hem-41
 {:args [],
  :display-args [],
  :display-name "Tell Branch",
  :edges [],
  :incidence-set #{},
  :network :net-50,
  :type :htn-expanded-method,
  :uid :hem-41},
 :henpt-31
 {:display-name "main-no-modes",
  :edges [:hedge-44],
  :incidence-set #{},
  :type :htn-expanded-nonprimitive-task,
  :uid :henpt-31},
 :henpt-32
 {:args [],
  :argsmap {},
  :display-args [],
  :display-name "Ask Branch",
  :edges [],
  :incidence-set #{},
  :name "ask-branch",
  :type :htn-expanded-nonprimitive-task,
  :uid :henpt-32},
 :henpt-33
 {:args [],
  :argsmap {},
  :display-args [],
  :display-name "Tell Branch",
  :edges [],
  :incidence-set #{},
  :name "tell-branch",
  :type :htn-expanded-nonprimitive-task,
  :uid :henpt-33},
 :hpt-35
 {:args
  [{:type :equal, :args [{:type :state-variable, :name door} "open"]}],
  :argsmap
  {"condition"
   {:args [{:type :state-variable, :name door} "open"], :type :equal}},
  :display-args [(= door "open")],
  :display-name "Ask",
  :edges [:hedge-48],
  :incidence-set #{},
  :name "ask",
  :plant-id "bsm1",
  :type :htn-primitive-task,
  :uid :hpt-35},
 :hpt-36
 {:args [],
  :argsmap {},
  :display-args [],
  :display-name "Delayed Gratification",
  :edges [],
  :incidence-set #{:hedge-48},
  :name "delayed-gratification",
  :type :htn-primitive-task,
  :uid :hpt-36},
 :hpt-39
 {:display-name "Delay",
  :edges [:hedge-51],
  :incidence-set #{},
  :name "delay",
  :type :htn-primitive-task,
  :uid :hpt-39},
 :hpt-40
 {:args
  [{:type :equal, :args [{:type :state-variable, :name door} "open"]}],
  :argsmap
  {"condition"
   {:args [{:type :state-variable, :name door} "open"], :type :equal}},
  :display-args [(= door "open")],
  :display-name "Tell",
  :edges [],
  :incidence-set #{:hedge-51},
  :name "tell",
  :plant-id "bsm1",
  :type :htn-primitive-task,
  :uid :hpt-40},
 :net-43
 {:display-name "main-no-modes",
  :rootnodes #{:henpt-31},
  :type :htn-network,
  :uid :net-43},
 :net-45
 {:display-name "Main",
  :rootnodes #{:henpt-32 :henpt-33},
  :type :htn-network,
  :uid :net-45},
 :net-47
 {:display-name "Ask Branch",
  :rootnodes #{:hpt-35},
  :type :htn-network,
  :uid :net-47},
 :net-50
 {:display-name "Tell Branch",
  :rootnodes #{:hpt-39},
  :type :htn-network,
  :uid :net-50},
 :network :net-43}
