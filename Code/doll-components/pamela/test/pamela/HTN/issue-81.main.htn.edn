{:hedge-34 {:end-node :hem-25, :type :edge, :uid :hedge-34},
 :hedge-36
 {:display-name "1", :end-node :hem-28, :type :edge, :uid :hedge-36},
 :hedge-38 {:end-node :henpt-23, :type :edge, :uid :hedge-38},
 :hedge-39
 {:display-name "2", :end-node :hem-30, :type :edge, :uid :hedge-39},
 :hedge-41 {:end-node :henpt-24, :type :edge, :uid :hedge-41},
 :hedge-42
 {:display-name "3", :end-node :hem-32, :type :edge, :uid :hedge-42},
 :hem-25
 {:args [],
  :display-args [],
  :display-name "Main",
  :edges [:hedge-36 :hedge-39 :hedge-42],
  :incidence-set #{:hedge-34},
  :network :net-35,
  :type :htn-expanded-method,
  :uid :hem-25},
 :hem-28
 {:args [],
  :display-args [],
  :display-name "Via Pargs",
  :edges [],
  :incidence-set #{},
  :network :net-37,
  :type :htn-expanded-method,
  :uid :hem-28},
 :hem-30
 {:args
  [{:type :pclass-arg-ref, :names [plant1]}
   {:type :pclass-arg-ref, :names [plant2]}],
  :display-args [plant1 plant2],
  :display-name "Via Margs",
  :edges [],
  :incidence-set #{},
  :network :net-40,
  :type :htn-expanded-method,
  :uid :hem-30},
 :hem-32
 {:args [],
  :display-args [],
  :display-name "Via Fields",
  :edges [],
  :incidence-set #{},
  :network :net-43,
  :type :htn-expanded-method,
  :uid :hem-32},
 :henpt-21
 {:display-name "coverage-test",
  :edges [:hedge-34],
  :incidence-set #{},
  :type :htn-expanded-nonprimitive-task,
  :uid :henpt-21},
 :henpt-22
 {:args [],
  :argsmap {},
  :display-args [],
  :display-name "Via Pargs",
  :edges [:hedge-38],
  :incidence-set #{},
  :name "via-pargs",
  :type :htn-expanded-nonprimitive-task,
  :uid :henpt-22},
 :henpt-23
 {:args
  [{:args [],
    :pclass simpleplant,
    :uid :pclass-2,
    :fields {},
    :type :pclass-ctor,
    :plant-id "sp1",
    :param plant1,
    :ancestry [[:pclass-1 sp1]],
    :plant-interface "RMQ",
    :plant-part "mypart"}
   {:args [],
    :pclass simpleplant,
    :uid :pclass-3,
    :fields {},
    :type :pclass-ctor,
    :plant-id "sp2",
    :param plant2,
    :ancestry [[:pclass-1 sp2]],
    :plant-interface "RMQ",
    :plant-part "mypart2"}],
  :argsmap
  {"a"
   {:ancestry [[:pclass-1 sp1]],
    :args [],
    :fields {},
    :param plant1,
    :pclass simpleplant,
    :plant-id "sp1",
    :plant-interface "RMQ",
    :plant-part "mypart",
    :type :pclass-ctor,
    :uid :pclass-2},
   "b"
   {:ancestry [[:pclass-1 sp2]],
    :args [],
    :fields {},
    :param plant2,
    :pclass simpleplant,
    :plant-id "sp2",
    :plant-interface "RMQ",
    :plant-part "mypart2",
    :type :pclass-ctor,
    :uid :pclass-3}},
  :display-args [plant1 plant2],
  :display-name "Via Margs",
  :edges [:hedge-41],
  :incidence-set #{:hedge-38},
  :name "via-margs",
  :type :htn-expanded-nonprimitive-task,
  :uid :henpt-23},
 :henpt-24
 {:args [],
  :argsmap {},
  :display-args [],
  :display-name "Via Fields",
  :edges [],
  :incidence-set #{:hedge-41},
  :name "via-fields",
  :type :htn-expanded-nonprimitive-task,
  :uid :henpt-24},
 :hpt-27
 {:args
  [{:type :pclass-arg-ref,
    :names [plant2 data1],
    :pclass simpleplant,
    :plant-id "sp2",
    :plant-part "mypart2",
    :plant-interface "RMQ"}
   {:type :pclass-arg-ref,
    :names [plant2 data2],
    :pclass simpleplant,
    :plant-id "sp2",
    :plant-part "mypart2",
    :plant-interface "RMQ"}],
  :argsmap
  {"fromfile"
   {:names [plant2 data1],
    :pclass simpleplant,
    :plant-id "sp2",
    :plant-interface "RMQ",
    :plant-part "mypart2",
    :type :pclass-arg-ref},
   "tofile"
   {:names [plant2 data2],
    :pclass simpleplant,
    :plant-id "sp2",
    :plant-interface "RMQ",
    :plant-part "mypart2",
    :type :pclass-arg-ref}},
  :display-args [plant2.data1 plant2.data2],
  :display-name "Scp",
  :edges [],
  :incidence-set #{},
  :name "scp",
  :plant-id "sp2",
  :plant-interface "RMQ",
  :plant-part "mypart2",
  :type :htn-primitive-task,
  :uid :hpt-27},
 :hpt-29
 {:args
  [{:type :method-arg-ref,
    :names [a data1],
    :pclass simpleplant,
    :plant-id "sp1",
    :plant-part "mypart",
    :plant-interface "RMQ"}
   {:type :method-arg-ref,
    :names [b data2],
    :pclass simpleplant,
    :plant-id "sp2",
    :plant-part "mypart2",
    :plant-interface "RMQ"}],
  :argsmap
  {"fromfile"
   {:names [a data1],
    :pclass simpleplant,
    :plant-id "sp1",
    :plant-interface "RMQ",
    :plant-part "mypart",
    :type :method-arg-ref},
   "tofile"
   {:names [b data2],
    :pclass simpleplant,
    :plant-id "sp2",
    :plant-interface "RMQ",
    :plant-part "mypart2",
    :type :method-arg-ref}},
  :display-args [a.data1 b.data2],
  :display-name "Copy",
  :edges [],
  :incidence-set #{},
  :name "cp",
  :plant-id "sp1",
  :plant-interface "RMQ",
  :plant-part "mypart",
  :type :htn-primitive-task,
  :uid :hpt-29},
 :hpt-31
 {:args
  ["echo"
   :myoptions
   {:type :field-ref,
    :names [p1 data1],
    :ancestry [[:pclass-3] [:pclass-1 sp2]]}
   {:type :field-ref,
    :names [p2 data2],
    :ancestry [[:pclass-3] [:pclass-1 sp2]]}],
  :argsmap
  {"arg1" :myoptions,
   "arg2"
   {:ancestry [[:pclass-3] [:pclass-1 sp2]],
    :names [p1 data1],
    :type :field-ref},
   "arg3"
   {:ancestry [[:pclass-3] [:pclass-1 sp2]],
    :names [p2 data2],
    :type :field-ref},
   "cmd" "echo"},
  :display-args ["echo" :myoptions p1.data1 p2.data2],
  :display-name "Shell",
  :edges [],
  :incidence-set #{},
  :name "shell",
  :plant-id "sp2",
  :plant-interface "RMQ",
  :plant-part "mypart2",
  :type :htn-primitive-task,
  :uid :hpt-31},
 :net-33
 {:display-name "coverage-test",
  :rootnodes #{:henpt-21},
  :type :htn-network,
  :uid :net-33},
 :net-35
 {:display-name "Main",
  :rootnodes #{:henpt-22},
  :type :htn-network,
  :uid :net-35},
 :net-37
 {:display-name "Via Pargs",
  :rootnodes #{:hpt-27},
  :type :htn-network,
  :uid :net-37},
 :net-40
 {:display-name "Via Margs",
  :rootnodes #{:hpt-29},
  :type :htn-network,
  :uid :net-40},
 :net-43
 {:display-name "Via Fields",
  :rootnodes #{:hpt-31},
  :type :htn-network,
  :uid :net-43},
 :network :net-33}
